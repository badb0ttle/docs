"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1386],{5421:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>n,data:()=>s});var a=r(641);const o={},n=(0,r(6262).A)(o,[["render",function(e,t){return(0,a.uX)(),(0,a.CE)("div",null,t[0]||(t[0]=[(0,a.Fv)('<h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><h2 id="搜素专题" tabindex="-1"><a class="header-anchor" href="#搜素专题"><span>搜素专题</span></a></h2><p>原文oi wiki:<a href="https://oi-wiki.org/search/dfs/" target="_blank" rel="noopener noreferrer">DFS</a><a href="https://oi-wiki.org/search/bfs/" target="_blank" rel="noopener noreferrer">BFS</a></p><h3 id="_1-dfs" tabindex="-1"><a class="header-anchor" href="#_1-dfs"><span>1.dfs</span></a></h3><p>子集型:枚举0101,即选或者不选. 排列型:123 132 231 213这样在已知个数的情况下枚举排列顺序</p><p><span style="color:red;">DFS基于栈</span></p><h3 id="_2-bfs" tabindex="-1"><a class="header-anchor" href="#_2-bfs"><span>2.bfs</span></a></h3><p>等权最短路:在无权图或等权图中，BFS 可以找到从起点到终点的最短路径。 最少操作次数:在状态转移问题中，BFS 可以找到从初始状态到目标状态的最少操作次数。</p><p><span style="color:red;">BFS基于队列</span></p>',9)]))}]]),s=JSON.parse('{"path":"/Algorithm/SA.html","title":"Search (搜索)","lang":"zh-CN","frontmatter":{"title":"Search (搜索)","order":4,"editLink":false,"category":["算法知识"],"tag":["知识点"],"description":"搜素专题 原文oi wiki:DFSBFS 1.dfs 子集型:枚举0101,即选或者不选. 排列型:123 132 231 213这样在已知个数的情况下枚举排列顺序 DFS基于栈 2.bfs 等权最短路:在无权图或等权图中，BFS 可以找到从起点到终点的最短路径。 最少操作次数:在状态转移问题中，BFS 可以找到从初始状态到目标状态的最少操作次数。 ...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/docs/Algorithm/SA.html"}],["meta",{"property":"og:site_name","content":"Badbottle\'s blog"}],["meta",{"property":"og:title","content":"Search (搜索)"}],["meta",{"property":"og:description","content":"搜素专题 原文oi wiki:DFSBFS 1.dfs 子集型:枚举0101,即选或者不选. 排列型:123 132 231 213这样在已知个数的情况下枚举排列顺序 DFS基于栈 2.bfs 等权最短路:在无权图或等权图中，BFS 可以找到从起点到终点的最短路径。 最少操作次数:在状态转移问题中，BFS 可以找到从初始状态到目标状态的最少操作次数。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T10:26:42.000Z"}],["meta",{"property":"article:tag","content":"知识点"}],["meta",{"property":"article:modified_time","content":"2025-02-17T10:26:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Search (搜索)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T10:26:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ℬ𝒶𝒹𝒷0𝓉𝓉𝓁ℯ\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"搜素专题","slug":"搜素专题","link":"#搜素专题","children":[{"level":3,"title":"1.dfs","slug":"_1-dfs","link":"#_1-dfs","children":[]},{"level":3,"title":"2.bfs","slug":"_2-bfs","link":"#_2-bfs","children":[]}]}],"git":{"createdTime":1739788002000,"updatedTime":1739788002000,"contributors":[{"name":"badb0ttle","username":"badb0ttle","email":"2546744220@qq.com","commits":1,"url":"https://github.com/badb0ttle"}]},"readingTime":{"minutes":0.52,"words":157},"filePathRelative":"Algorithm/SA.md","localizedDate":"2025年2月17日","excerpt":"\\n<h2>搜素专题</h2>\\n<p>原文oi wiki:<a href=\\"https://oi-wiki.org/search/dfs/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">DFS</a><a href=\\"https://oi-wiki.org/search/bfs/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">BFS</a></p>\\n<h3>1.dfs</h3>\\n<p>子集型:枚举0101,即选或者不选.\\n排列型:123 132 231 213这样在已知个数的情况下枚举排列顺序</p>\\n<p><span style=\\"color:red;\\">DFS基于栈</span></p>","autoDesc":true}')},6262:(e,t)=>{t.A=(e,t)=>{const r=e.__vccOpts||e;for(const[e,a]of t)r[e]=a;return r}}}]);